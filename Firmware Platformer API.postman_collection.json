{
	"info": {
		"_postman_id": "fc7657c2-d531-4a5e-8389-f6d5a3159bbb",
		"name": "Firmware Platformer API",
		"description": "This project is a Symfony-based web application that allows users to manage, upload, download firmware files and view them in a list. The application is designed to be user-friendly and easy to use. The application is built using the Symfony framework and uses Docker to manage the development environment.\n\n!!! See response in preview mode to render html. !!!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31972725"
	},
	"item": [
		{
			"name": "Home",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}",
					"host": [
						"{{host}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": " _username",
							"value": "admin@example.com",
							"type": "text"
						},
						{
							"key": "_password",
							"value": "admin_password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show User Profile",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Prject",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "NewProjectName",
							"type": "text"
						},
						{
							"key": "device_id",
							"value": "1",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Projectdescription",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/projects/add",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show Dashboard with Filters",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects?search=Worm&myProjects=0&devices%5B%5D=2&sort=name&direction=desc",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					],
					"query": [
						{
							"key": "search",
							"value": "Worm"
						},
						{
							"key": "myProjects",
							"value": "0"
						},
						{
							"key": "devices%5B%5D",
							"value": "2"
						},
						{
							"key": "sort",
							"value": "name"
						},
						{
							"key": "direction",
							"value": "desc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add New Firmware",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "version",
							"value": "1.1.1",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/home/mikita/Pictures/Screenshots/create_project.png"
						}
					]
				},
				"url": {
					"raw": "{{host}}/firmwares/add?projectId=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"firmwares",
						"add"
					],
					"query": [
						{
							"key": "projectId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Firmware",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "version",
							"value": "1.1.2",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/home/mikita/Programming/IdeaProjects/symfony-project/public/images/boom.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{host}}/project/1/firmwares/edit/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"project",
						"1",
						"firmwares",
						"edit",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Firmware",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/firmwares/delete/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"firmwares",
						"delete",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Project",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Updated Project name",
							"type": "text"
						},
						{
							"key": "device_id",
							"value": "2",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Update description",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/projects/edit/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"edit",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/delete/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"delete",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error page",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/none",
					"host": [
						"{{host}}"
					],
					"path": [
						"none"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/logout",
					"host": [
						"{{host}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://localhost",
			"type": "string"
		}
	]
}